# bot.py
import os
from slack_bolt import App
from slack_bolt.adapter.socket_mode import SocketModeHandler
from slack_sdk.web import WebClient
from datetime import datetime, timedelta

SLACK_BOT_TOKEN = os.getenv("SLACK_BOT_TOKEN")
SLACK_APP_TOKEN = os.getenv("SLACK_APP_TOKEN")

app = App(token=SLACK_BOT_TOKEN)
client = WebClient(token=SLACK_BOT_TOKEN)

# Function to post a message in a channel
def post_message(channel, text):
    client.chat_postMessage(channel=channel, text=text)

# Scheduled function to post a message
def scheduled_task():
    post_message("#irobots-chatter", "Hello, world!")

# Command to trigger the scheduled task manually (for testing)
@app.command("/helloworld")
def hello_world(ack):
    ack()
    scheduled_task()

if __name__ == "__main__":
    handler = SocketModeHandler(app, SLACK_APP_TOKEN)
    handler.start()
def fetch_messages(channel):
    now = datetime.now()
    yesterday = now - timedelta(days=1)
    response = client.conversations_history(
        channel=channel,
        oldest=yesterday.timestamp(),
        latest=now.timestamp()
    )
    return response['messages']
